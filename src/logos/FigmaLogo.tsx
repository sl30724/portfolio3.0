/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF, useCursor } from "@react-three/drei";
import { useRef, useState } from "react";
import { useFrame } from "@react-three/fiber";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        Cube041: THREE.Mesh;
        Cube044: THREE.Mesh;
        Cube046: THREE.Mesh;
        Sphere002: THREE.Mesh;
        Cube073: THREE.Mesh;
        Cube080: THREE.Mesh;
    };
    materials: {
        ["Material.002"]: THREE.MeshStandardMaterial;
        ["Material.001"]: THREE.MeshStandardMaterial;
        ["Material.003"]: THREE.MeshStandardMaterial;
        ["Material.004"]: THREE.MeshStandardMaterial;
        base_0: THREE.MeshPhysicalMaterial;
        ["Material.005"]: THREE.MeshStandardMaterial;
    };
};

export function FigmaLogo(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF("/models/3Dfigma.glb") as GLTFResult;
    const figma = useRef() as React.MutableRefObject<THREE.Group>;
    const [hovered, setHovered] = useState(false);

    useCursor(hovered, "pointer", "auto");

    useFrame(() => {
        if (figma.current) {
            figma.current.position.y = THREE.MathUtils.lerp(figma.current.position.y, 3, 0.05)
        }
    });
    return (
        <group {...props} dispose={null} ref={figma} onPointerOver={()=>{setHovered(true)}} onPointerOut={()=>{setHovered(false)}}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube041.geometry}
                material={materials["Material.002"]}
                position={[0.36, 0.4, 0.15]}
                scale={0.21}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube044.geometry}
                material={materials["Material.001"]}
                position={[0.36, 0.4, -0.27]}
                rotation={[Math.PI, 0, Math.PI]}
                scale={0.21}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube046.geometry}
                material={materials["Material.003"]}
                position={[0.36, 0.01, 0.15]}
                scale={0.21}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere002.geometry}
                material={materials["Material.004"]}
                position={[0.36, 0.01, -0.25]}
                scale={0.19}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube073.geometry}
                material={materials.base_0}
                scale={[0.67, 1, 1]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube080.geometry}
                material={materials["Material.005"]}
                position={[0.37, -0.4, 0.15]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.22}
            />
        </group>
    );
}

useGLTF.preload("/models/3Dfigma.glb");
